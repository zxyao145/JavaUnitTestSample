<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>demo-parent</artifactId>
        <groupId>com.xxx.unittest</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>junit5-demo-app</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-databind</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
            </exclusions>
        </dependency>


        <!--
            junit-jupiter-api
            junit-jupiter-params
            junit-jupiter-engine
            三个依赖的聚合
        -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.9.1</version>
            <scope>test</scope>
        </dependency>
        <!--兼容junit4语法-->
        <!--<dependency>-->
        <!--    <groupId>org.junit.vintage</groupId>-->
        <!--    <artifactId>junit-vintage-engine</artifactId>-->
        <!--    <version>5.9.1</version>-->
        <!--    <scope>test</scope>-->
        <!--</dependency>-->

        <!--
            mock static 需要用到该依赖，内部会引用同版本的 mockito-core
         -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>0.8.8</version>
            <!--
            确保 classifier 是 runtime，否则会报错：
            java.lang.NoClassDefFoundError: org/jacoco/agent/rt/xxxx/Offline
             -->
            <classifier>runtime</classifier>
        </dependency>

        <!--业务依赖-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <id>default-instrument</id>
                        <goals>
                            <goal>instrument</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-restore-instrumented-classes</id>
                        <phase>test</phase>
                        <goals>
                            <goal>restore-instrumented-classes</goal>
                        </goals>
                    </execution>
                </executions>

                <!-- 默认值，不需要改变。
                如果改了，请确保 dataFile的值和 maven-surefire-plugin 下 jacoco-agent.destfile 是一致的
                <configuration>
                    <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                </configuration>
                -->
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--<version>2.22.2</version>-->
                <version>3.0.0-M6</version>
                <configuration>
                    <!--如果测试文件不是以test结尾，需要配置includes-->
                    <!--<includes>-->
                    <!--    <include>com.xxx.unittest.junit5demo.util.EnvHelperTest.java</include>-->
                    <!--</includes>-->
                    <systemPropertyVariables>
                        <jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
